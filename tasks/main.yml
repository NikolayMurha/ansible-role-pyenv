---
- name: variables
  include_tasks: variables.yml

- name: install build requisites
  package:
    name: "{{ python_packages }}"
  become: "yes"

- name: checkout pyenv
  git:
    repo: "{{ python_pyenv_url }}"
    dest: "{{ pyenv_dir }}"
    version: master

- name: uninstall python versions
  command: >-
    {{ pyenv_dir }}/bin/pyenv uninstall -f {{ item.version }}
  register: pyenv_uninstall
  failed_when:
    - pyenv_uninstall.rc != 0
    - "'not installed' not in pyenv_uninstall.stderr"
  changed_when:
    - pyenv_uninstall.rc == 0
    - "'uninstalled' in pyenv_uninstall.stdout"
  when: item.state is defined and item.state == 'absent'
  with_items: "{{ pyenv_python_versions }}"

- name: install python versions
  command: >-
    {{ pyenv_dir }}/bin/pyenv install {{ item.version }}
  args:
    creates: "{{ pyenv_dir }}/versions/{{ item.version }}/bin/python"
  when: (item.state is defined and item.state == 'present') or item.state is not defined
  with_items: "{{ pyenv_python_versions }}"

- name: set global version
  command: >-
    {{ pyenv_dir }}/bin/pyenv global {{ item.version }}
  changed_when: false
  with_items: "{{ pyenv_python_versions |selectattr('global', 'defined')| selectattr('global') | list }}"
